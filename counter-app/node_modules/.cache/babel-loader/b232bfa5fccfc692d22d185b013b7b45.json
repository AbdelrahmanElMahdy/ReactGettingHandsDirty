{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mahdy/WORK/temp coding/js/counter-app/src/App.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom';\n\nimport './App.css';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counters: [{\n        id: 0,\n        value: 0\n      }, {\n        id: 1,\n        value: 1\n      }, {\n        id: 2,\n        value: 2\n      }, {\n        id: 3,\n        value: 3\n      }]\n    };\n\n    this.incrementHandler = counter => {\n      const counters = this.state.counters;\n      let index = counters.indexOf(counter);\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.resetHandler = this.resetHandler.bind(this);\n  }\n\n  deleteHandle(id) {\n    const counters = this.state.counters.filter(counter => counter.id !== id);\n    this.setState({\n      counters: counters\n    });\n  }\n\n  resetHandler() {\n    const counters = this.state.counters.map(counter => {\n      counter.value = 0;\n      return counter;\n    });\n    this.setState(counters);\n    return;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          onDelete: this.deleteHandle,\n          on: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mahdy/WORK/temp coding/js/counter-app/src/App.js"],"names":["React","Component","Counters","App","constructor","props","state","counters","id","value","incrementHandler","counter","index","indexOf","setState","resetHandler","bind","deleteHandle","filter","map","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAQC,QAAR,MAAuB,uBAAvB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAW1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SATnBC,KASmB,GATb;AACJC,MAAAA,QAAQ,EAAC,CACL;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OADK,EAEL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAFK,EAGL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAHK,EAIL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAJK;AADL,KASa;;AAAA,SASnBC,gBATmB,GASCC,OAAD,IAAY;AAC7B,YAAMJ,QAAQ,GAAC,KAAKD,KAAL,CAAWC,QAA1B;AACA,UAAIK,KAAK,GAACL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAV;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AAEA,WAAKK,QAAL,CAAe;AAAEP,QAAAA;AAAF,OAAf;AACD,KAfkB;;AAEjB,SAAKQ,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,YAAY,CAACT,EAAD,EAAI;AACf,UAAMD,QAAQ,GAAC,KAAKD,KAAL,CAAWC,QAAX,CAAoBW,MAApB,CAA2BP,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAcA,EAApD,CAAf;AACC,SAAKM,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAACA;AAAV,KAAd;AACD;;AASDQ,EAAAA,YAAY,GAAE;AACZ,UAAMR,QAAQ,GAAC,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBR,OAAO,IAAI;AAC9CA,MAAAA,OAAO,CAACF,KAAR,GAAc,CAAd;AACA,aAAOE,OAAP;AAAgB,KAFL,CAAf;AAIA,SAAKG,QAAL,CAAeP,QAAf;AACA;AACD;;AAIDa,EAAAA,MAAM,GAAE;AACR,wBAAS,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEH;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BACI,QAAE,QAAF;AAAW,UAAA,QAAQ,EAAE,KAAKH,YAA1B;AAAwC,UAAA,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,YAAT;AAUC;;AAlDyB;;AAqD5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import ReactDOM from 'react-dom';\nimport './App.css';\nimport  Counters  from './components/counters';\n\nclass App extends Component {\n \n  state={\n    counters:[\n        {id:0,value:0},\n        {id:1,value:1},\n        {id:2,value:2},\n        {id:3,value:3}\n    ]\n  };\n\n  constructor(props) {\n    super(props);\n    this.resetHandler = this.resetHandler.bind(this);\n  } \n\n  deleteHandle(id){\n   const counters=this.state.counters.filter(counter => counter.id !==id)\n    this.setState({counters:counters})\n  };\n  incrementHandler = (counter)=> {\n    const counters=this.state.counters\n    let index=counters.indexOf(counter);\n    counters[index].value++ ;\n    \n    this.setState( { counters }); \n  };\n\n  resetHandler(){\n    const counters=this.state.counters.map(counter => {\n        counter.value=0;\n        return counter;})\n\n    this.setState( counters);\n    return \n  };\n\n\n  \n  render(){\n  return ( <React.Fragment>\n  \n        <main className=\"container\">\n            < Counters onDelete={this.deleteHandle} on></ Counters>\n        </main>\n\n          \n   \n  \n    </React.Fragment>);\n  };\n\n}\nexport default App ;\n\n"]},"metadata":{},"sourceType":"module"}